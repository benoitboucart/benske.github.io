{"content":"<p>The community behind AngularJS is fantastic. When you’re facing a problem the chance is high that you’ll find a solution on the web. Sometimes you’ll even find a proper <em>Angular directive</em>. And that was the case when I was looking for combining AngularJS with Google Maps.</p>\n\n<p>There are multiple libraries that integrates the Google Maps API with AngularJS. Some are:</p>\n\n<ul>\n  <li><a href=\"http://angular-google-maps.org\" title=\"Google Maps for Angular\"><strong>Google Maps for AngularJS</strong></a> makes the integration of more advanced features of the Google Maps API (v3) possible. The <a href=\"http://angular-google-maps.org/demo\">demo</a> shows what’s possible with this collection of directives.</li>\n  <li><a href=\"https://github.com/angular-ui/ui-map\"><strong>Angular UI Maps</strong></a> is another set of directives that has less advanced possibilities then <em>Google Maps for AngularJS</em> but enough for a basic usage of the Google Maps API. </li>\n</ul>\n\n<p>For the purpose of this simple demo, I’ll use the second library. This one is sufficient for what we need for this demo: display a Google Map based on a text location.</p>\n\n<p>First of all you’ll have to load the Google Maps API. This can be done by adding this script at the bottom of your HTML file (before the closing <code>&lt;body&gt;</code> tag).</p>\n\n<p>{% highlight html linenos %}\n<script type=\"text/javascript\" src=\"bower_components/angular/angular.js\"></script>\n<script type=\"text/javascript\" src=\"bower_components/angular-ui-utils/modules/event/event.js\"></script>\n<script type=\"text/javascript\" src=\"bower_components/angular-ui-map/src/map.js\"></script>\n<script type=\"text/javascript\" src=\"https://maps.googleapis.com/maps/api/js?v=3.exp&amp;sensor=false&amp;callback=onGoogleReady\"></script>\n{% endhighlight %}</p>\n\n<p>You can also <a href=\"https://developers.google.com/maps/documentation/javascript/examples/map-simple-async\" title=\"Load the Google Maps API asynchronously\">load the API aynchronously</a> if you want, but then make sure to compile the Angular templates with Maps UI directives in it <strong>after</strong> the Google Maps API has been loaded.</p>\n\n<p>Read more on how to install <em>Angular UI Maps</em> on the <a href=\"https://github.com/angular-ui/ui-map\">GitHub repository</a>, and try to display a hardcoded Google Map with this plugin. </p>\n\n<h2 id=\"geocode-an-address\">Geocode an address</h2>\n<p>If you have an address (user input), you’ll have to “geocode” this string to have the GPS coordinates of the given location (longitude &amp; latitude). You can do this easily via Javascript with the Geocodor Google Maps API.\n{% highlight javascript linenos %}\nvar geocoder = new google.maps.Geocoder();\ngeocoder.geocode( { “address”: $scope.textfield }, function(results, status) {\n    if (status == google.maps.GeocoderStatus.OK &amp;&amp; results.length &gt; 0) {\n        var location = results[0].geometry.location;\n        $scope.myMap.panTo(location);\n    }\n});\n{% endhighlight %}</p>\n\n<p>The above code will geocode the address that the user has filled in (<code>$scope.textfield</code>) and will then pan to the geocoded location (<code>$scope.myMap.panTo(location)</code>).</p>\n\n<p>(see this <a href=\"http://codepen.io/benske/pen/iAgpq\" title=\"Google Maps Geocode API example\">pen on CodePen.io</a> for a working example)</p>\n\n"}
